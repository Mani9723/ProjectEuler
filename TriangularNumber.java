import java.util.ArrayList;

/**
 * https://projecteuler.net/problem=12
 *
 * PROBLEM 12:
 *The sequence of triangle numbers is generated by adding the natural numbers.
 * So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
 * he first ten terms would be:

 *1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

 *Let us list the factors of the first seven triangle numbers:

 *  1: 1
 *  3: 1,3
 *  6: 1,2,3,6
 *  10: 1,2,5,10
 *  15: 1,3,5,15
 *  21: 1,3,7,21
 *  28: 1,2,4,7,14,28
 *  We can see that 28 is the first triangle number to have over five divisors.

 *  What is the value of the first triangle number to have over five hundred divisors?
 *
 *
 * @author Mani Shah
 * @version 1.0
 * @since 2/11/18
 *
 */
public class TriangularNumber
{
	static ArrayList<Long> divisorArraylist = new ArrayList<>();
	static boolean full = false;
	public static void main(String[] args)
	{
		//long n = 2031120L;
		long n = 1L;
		while(full == false){
			sumNumber(n);
			n++;
		}
		System.out.println(divisorArraylist + "\n"+divisorArraylist.size() +"th triangular:");
		System.out.println(divisorArraylist.get(divisorArraylist.size()-1));
	}
	private static void sumNumber(long n)
	{
		long sum = 0L;
		for(int i = 1; i<=n;i++) {
			sum+=i;
		}
		findDivisors(sum);
	}
	private static int findDivisors(long number)
	{
		int count =1;
		for(long i = 1L;i<=number;i++){
			if(number%i==0) {
				count++;
				divisorArraylist.add(i);
			}
		}
		if(divisorArraylist.size()<=500){
			divisorArraylist.clear();
		}
		else{
			full = true;
		}
		return count;
	}
}
